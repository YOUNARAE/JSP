/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.84
 * Generated at: 2022-12-05 08:56:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._01;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Calendar;

public final class calendar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Calendar");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

   request.setCharacterEncoding("UTF-8");
   
   Calendar now = Calendar.getInstance();
   int year = now.get(Calendar.YEAR);   // 현재 연도 
   int month = now.get(Calendar.MONTH)+1; //1월은 0으로 시작해서 1을 더해줌 현재달 
   
   String str_year = request.getParameter("year");      // 파라미터에 연도 값과 
   String str_month = request.getParameter("month");   // 파리미터에 월 값 가져와 
   
   // 가져온 값이 있는 경우 
   if(str_year != null){
      year = Integer.parseInt(str_year);
   }
   if(str_month != null){
      month = Integer.parseInt(str_month);
   }
   now.set(year, month-1, 1); // 출력할 년도, 월로 설정
    
   // now.set(year, 10, 1); // 출력할 년도, 월로 설정
   
   year = now.get(Calendar.YEAR); //변화된 년도 값 가져오기
   month = now.get(Calendar.MONTH)+1; // 월 값 가져오기
   
   int endDay = now.getActualMaximum(Calendar.DAY_OF_MONTH); // 해당월의 마지막 날짜
   int week = now.get(Calendar.DAY_OF_WEEK); //1~7(일월화수목금토)
   
 
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>JSP 만년달력</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("    *{padding: 0px; margin: 0px;}  /* 브라우저별 기본 여백 차이가 있기에 작성한다. */\r\n");
      out.write("    body{font-size: 9pt;}\r\n");
      out.write("    td{font-size: 9pt;}\r\n");
      out.write("    a{cusor: pointer; color: #000000; text-decoration: none; font-size: 9pt; line-height: 150%;}\r\n");
      out.write("    a:HOVER, a:ACTIVE{font-size: 9pt; color: #F28011; text-decoration: underline;}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.1/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function sendIt(){\r\n");
      out.write("   var strYear = $(\"select[name='year']\").val();\r\n");
      out.write("   var strMonth = $(\"select[name='month']\").val();\r\n");
      out.write("  //alert(\"strYear==\" + strYear + \"=strMonth=\"+strMonth);\r\n");
      out.write("  \r\n");
      out.write("  console.log(strYear);\r\n");
      out.write("  console.log(strMonth);\r\n");
      out.write("   \r\n");
      out.write("   var url=\"calendar.jsp?year=\"+strYear+\"&month=\"+strMonth;\r\n");
      out.write("   location.href=url; //url이 가지고 있는 값으로 이동\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("    <center>\r\n");
      out.write("       ");
      out.print(year);
      out.write("\r\n");
      out.write("       ");
      out.print(month);
      out.write("\r\n");
      out.write("       ");
      out.print(endDay);
      out.write("\r\n");
      out.write("       ");
      out.print(week);
      out.write("\r\n");
      out.write("        <table width=\"210\" border=\"0\" cellpadding=\"1\" cellspacing=\"2\">\r\n");
      out.write("            <tr height=\"30\">\r\n");
      out.write("                <td align=\"center\">\r\n");
      out.write("                    <form action =\"\" method=\"post\">\r\n");
      out.write("                        <select name=\"year\" onchange=\"sendIt()\">\r\n");
      out.write("                        ");

                           for(int i=year-3;i<year+3;i++){      
                        
      out.write("\r\n");
      out.write("                           <option value=\"");
      out.print( i);
      out.write('"');
      out.write(' ');
      out.print(year==i?"selected='selected'":"" );
      out.write('>');
      out.print(i );
      out.write("년</option>\r\n");
      out.write("                        ");

                           }
                        
      out.write("\r\n");
      out.write("                        </select>\r\n");
      out.write("                       \r\n");
      out.write("                        <select name=\"month\" onchange=\"sendIt()\">\r\n");
      out.write("                        ");

                           for(int i=1;i<=12;i++){      
                        
      out.write("\r\n");
      out.write("                           <option value=\"");
      out.print( i);
      out.write('"');
      out.write(' ');
      out.print(month==i?"selected='selected'":"" );
      out.write('>');
      out.print(i );
      out.write("월</option>\r\n");
      out.write("                        ");

                           }
                        
      out.write("\r\n");
      out.write("                        </select>\r\n");
      out.write("                           \r\n");
      out.write("                    </form>\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("        </table>\r\n");
      out.write("       \r\n");
      out.write("        <table width=\"210\" border=\"0\" cellpadding=\"2\" cellspacing=\"1\" bgcolor=\"#cccccc\">\r\n");
      out.write("            <tr height=\"25\">\r\n");
      out.write("                <td align=\"center\" bgcolor=\"#e6e4e6\"><font color=\"red\">일</font></td>\r\n");
      out.write("                <td align=\"center\" bgcolor=\"#e6e4e6\">월</td>\r\n");
      out.write("                <td align=\"center\" bgcolor=\"#e6e4e6\">화</td>\r\n");
      out.write("                <td align=\"center\" bgcolor=\"#e6e4e6\">수</td>\r\n");
      out.write("                <td align=\"center\" bgcolor=\"#e6e4e6\">목</td>\r\n");
      out.write("                <td align=\"center\" bgcolor=\"#e6e4e6\">금</td>\r\n");
      out.write("                <td align=\"center\" bgcolor=\"#e6e4e6\"><font color=\"blue\">토</font></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            ");

               int startDay = 0; // 1일이 어느요일 칸에서 시작하느냐에 따른 변수 먼저 선언
               out.println("<tr>");
               for(int i=1;i<week;i++){  // 공백일자 시작요일 1 일요일  
                  out.println("<td></td>");
                  startDay++;
               }
               
               String sun ="";
               String sat ="";
               for(int i=1; i<=endDay; i++){
                  out.println("<td>"+i+"</td>");
                  startDay++;
                  if(startDay==7&&i!=endDay){
                     out.println("</tr><tr>");
                     startDay=0;
                  }
               }
               
            
            
      out.write("\r\n");
      out.write("        </table>\r\n");
      out.write("    </center>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
